name: Build and Deploy to Komodo

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-komodo:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Deploy to Komodo
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.KOMODO_HOST }}
        username: ${{ secrets.KOMODO_USER }}
        key: ${{ secrets.KOMODO_SSH_KEY }}
        port: ${{ secrets.KOMODO_PORT }}
        script: |
          # Login to GitHub Container Registry
          echo ${{ secrets.TOKEN }} | sudo docker login ghcr.io -u ${{ secrets.USERNAME }} --password-stdin
          
          # Pull the latest image with new tag
          echo "üì• Pulling Docker image..."
          sudo docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
          # Update the image tag in docker-compose.yml
          echo "üè∑Ô∏è  Updating image tag..."
          sudo sed -i "s|image:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|" /etc/komodo/stacks/crawlee-stack/docker-compose.yml
          
          # Restart the stack
          echo "üîÑ Restarting stack..."
          sudo komodo stack deploy crawlee-stack
          
          # Wait for restart
          echo "‚è≥ Waiting for restart..."
          sleep 10
          
          # Check health
          echo "üè• Checking service health..."
          if curl -f http://localhost:3000/health; then
            echo "‚úÖ Deployment successful - service is healthy"
          else
            echo "‚ùå Deployment failed - service is not responding"
            exit 1
          fi 